@model ECommerceWebApp.Models.Product
@using Microsoft.AspNetCore.Identity
@inject UserManager<ECommerceWebApp.Models.User> UserManager
@{
    ViewData["Title"] = Model.Name;
}

<div class="container">
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">Home</a></li>
            <li class="breadcrumb-item"><a asp-controller="Products" asp-action="Index">Products</a></li>
            <li class="breadcrumb-item active">@Model.Name</li>
        </ol>
    </nav>
    
    <div class="row">
        <!-- Product Images -->
        <div class="col-lg-6 mb-4">
            @if (Model.ProductImages.Any())
            {
                <div id="productCarousel" class="carousel slide" data-bs-ride="carousel">
                    <div class="carousel-inner">
                        @for (int i = 0; i < Model.ProductImages.Count; i++)
                        {
                            <div class="carousel-item @(i == 0 ? "active" : "")">
                                <img src="@Model.ProductImages.ElementAt(i).ImageUrl" class="d-block w-100 rounded" alt="@Model.Name" style="height: 400px; object-fit: cover;">
                            </div>
                        }
                    </div>
                    @if (Model.ProductImages.Count > 1)
                    {
                        <button class="carousel-control-prev" type="button" data-bs-target="#productCarousel" data-bs-slide="prev">
                            <span class="carousel-control-prev-icon"></span>
                        </button>
                        <button class="carousel-control-next" type="button" data-bs-target="#productCarousel" data-bs-slide="next">
                            <span class="carousel-control-next-icon"></span>
                        </button>
                    }
                </div>
            }
            else
            {
                <div class="bg-light d-flex align-items-center justify-content-center rounded" style="height: 400px;">
                    <i class="fas fa-image fa-5x text-muted"></i>
                </div>
            }
        </div>
        
        <!-- Product Details -->
        <div class="col-lg-6">
            <h1 class="h2">@Model.Name</h1>
            <p class="text-muted mb-2">
                <i class="fas fa-tag"></i> @Model.Category.Name
            </p>
            

            
            <div class="mb-4">
                <span class="h2 text-primary">₹@Model.Price.ToString("F2")</span>
                @if (Model.Reviews.Any())
                {
                    <div class="mt-2">
                        <span class="h5 text-warning">
                            @for (int i = 1; i <= 5; i++)
                            {
                                <i class="fas fa-star @(i <= Model.AverageRating ? "" : "text-muted")"></i>
                            }
                        </span>
                        <span class="ms-2">@Model.AverageRating.ToString("F1") (@Model.ReviewCount reviews)</span>
                    </div>
                }
            </div>
            
            <div class="mb-3">
                <strong>Description:</strong>
                <p class="mt-2">@Model.Description</p>
            </div>
            
            <div class="row mb-4">
                <div class="col-sm-6">
                    <strong>Stock:</strong> 
                    @if (Model.StockQuantity > 0)
                    {
                        <span class="text-success">@Model.StockQuantity in stock</span>
                    }
                    else
                    {
                        <span class="text-danger">Out of stock</span>
                    }
                </div>

            </div>
            
            <div class="mb-3">
                <strong>Seller:</strong> @Model.Seller.FirstName @Model.Seller.LastName
            </div>
            
            @if (User.IsInRole("Admin") || (User.IsInRole("Seller") && Model.SellerId == UserManager.GetUserId(User)))
            {
                <div class="mt-4 pt-3 border-top">
                    <h6>Seller Actions:</h6>
                    <div class="btn-group" role="group">
                        <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-warning">
                            <i class="fas fa-edit"></i> Edit
                        </a>
                        <a asp-action="Delete" asp-route-id="@Model.Id" class="btn btn-danger">
                            <i class="fas fa-trash"></i> Delete
                        </a>
                    </div>
                </div>
            }
        </div>
    </div>

    <!-- Reviews Section -->
    <div class="row mt-5">
        <div class="col-12">
            <h3>Customer Reviews</h3>

            @if (User.Identity!.IsAuthenticated)
            {
                <!-- Add Review Form -->
                <div class="card mb-4">
                    <div class="card-header">
                        <h5>Write a Review</h5>
                    </div>
                    <div class="card-body">
                        @if (TempData["SuccessMessage"] != null)
                        {
                            <div class="alert alert-success alert-dismissible fade show" role="alert">
                                <i class="fas fa-check-circle"></i> @TempData["SuccessMessage"]
                                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                            </div>
                        }
                        @if (TempData["ErrorMessage"] != null)
                        {
                            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                                <i class="fas fa-exclamation-circle"></i> @TempData["ErrorMessage"]
                                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                            </div>
                        }

                        <form asp-controller="Reviews" asp-action="Create" method="post">
                            <input type="hidden" name="ProductId" value="@Model.Id" />

                            <div class="mb-3">
                                <label class="form-label">Rating <span class="text-muted">(Click to rate)</span></label>
                                <div class="rating-input">
                                    <input type="radio" name="Rating" value="5" id="star5" />
                                    <label for="star5" title="5 stars - Excellent">★</label>
                                    <input type="radio" name="Rating" value="4" id="star4" />
                                    <label for="star4" title="4 stars - Very Good">★</label>
                                    <input type="radio" name="Rating" value="3" id="star3" />
                                    <label for="star3" title="3 stars - Good">★</label>
                                    <input type="radio" name="Rating" value="2" id="star2" />
                                    <label for="star2" title="2 stars - Fair">★</label>
                                    <input type="radio" name="Rating" value="1" id="star1" />
                                    <label for="star1" title="1 star - Poor">★</label>
                                </div>
                                <small class="text-muted">Your rating helps other customers make informed decisions</small>
                            </div>

                            <div class="mb-3">
                                <label for="Comment" class="form-label">Your Review (Optional)</label>
                                <textarea name="Comment" id="Comment" class="form-control" rows="4" placeholder="Share your thoughts about this product..."></textarea>
                            </div>

                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-star"></i> Submit Review
                            </button>
                        </form>
                    </div>
                </div>
            }
            else
            {
                <div class="alert alert-info">
                    <i class="fas fa-info-circle"></i>
                    <a asp-area="Identity" asp-page="/Account/Login">Login</a> to write a review.
                </div>
            }

            <!-- Display Reviews -->
            @if (Model.Reviews.Any())
            {
                @foreach (var review in Model.Reviews.OrderByDescending(r => r.CreatedAt))
                {
                    <div class="card mb-3">
                        <div class="card-body">
                            <div class="d-flex justify-content-between align-items-start">
                                <div>
                                    <h6 class="card-title">@review.User.FirstName @review.User.LastName</h6>
                                    <div class="text-warning mb-2">
                                        @for (int i = 1; i <= 5; i++)
                                        {
                                            <i class="fas fa-star @(i <= review.Rating ? "" : "text-muted")"></i>
                                        }
                                    </div>
                                    @if (!string.IsNullOrEmpty(review.Comment))
                                    {
                                        <p class="card-text">@review.Comment</p>
                                    }
                                </div>
                                <div class="text-end">
                                    <small class="text-muted">@review.CreatedAt.ToString("MMM dd, yyyy")</small>
                                    @if (User.Identity!.IsAuthenticated && (User.IsInRole("Admin") || review.UserId == UserManager.GetUserId(User)))
                                    {
                                        <form asp-controller="Reviews" asp-action="Delete" asp-route-id="@review.Id" method="post" class="d-inline mt-2">
                                            <button type="submit" class="btn btn-sm btn-outline-danger" onclick="return confirm('Are you sure you want to delete this review?')">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </form>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }
            else
            {
                <p class="text-muted">No reviews yet. Be the first to review this product!</p>
            }
        </div>
    </div>

</div>

<style>
    .rating-input {
        display: flex;
        flex-direction: row-reverse;
        justify-content: flex-end;
        gap: 2px;
    }

    .rating-input input[type="radio"] {
        display: none;
    }

    .rating-input label {
        font-size: 1.8rem;
        color: transparent;
        cursor: pointer;
        transition: all 0.2s ease;
        text-shadow: 0 0 0 #d3d3d3; /* Hollow gray stars */
        position: relative;
    }

    .rating-input label:before {
        content: "★";
        position: absolute;
        left: 0;
        color: #d3d3d3;
        z-index: 1;
    }

    .rating-input label:hover:before,
    .rating-input label:hover ~ label:before {
        color: #ffc107;
        text-shadow: 0 0 5px rgba(255, 193, 7, 0.3);
    }

    .rating-input input[type="radio"]:checked ~ label:before {
        color: #ffc107;
        text-shadow: 0 0 5px rgba(255, 193, 7, 0.3);
    }

    .rating-input label:hover {
        transform: scale(1.1);
    }

    /* Selected state */
    .rating-input input[type="radio"]:checked ~ label:before,
    .rating-input.has-selection label.selected:before {
        color: #ffc107 !important;
        text-shadow: 0 0 8px rgba(255, 193, 7, 0.5);
    }

    /* Reset hover effect when a selection is made */
    .rating-input.has-selection label:not(.selected):before {
        color: #d3d3d3 !important;
        text-shadow: none !important;
    }
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const ratingInputs = document.querySelectorAll('.rating-input input[type="radio"]');
    const ratingContainer = document.querySelector('.rating-input');
    const labels = document.querySelectorAll('.rating-input label');

    ratingInputs.forEach(function(input, index) {
        input.addEventListener('change', function() {
            // Remove previous selections
            labels.forEach(label => label.classList.remove('selected'));
            ratingContainer.classList.add('has-selection');

            // Mark selected stars
            const selectedValue = parseInt(this.value);
            labels.forEach((label, labelIndex) => {
                const labelValue = parseInt(label.getAttribute('for').replace('star', ''));
                if (labelValue <= selectedValue) {
                    label.classList.add('selected');
                }
            });
        });
    });

    // Add hover effects
    labels.forEach(function(label) {
        label.addEventListener('mouseenter', function() {
            if (!ratingContainer.classList.contains('has-selection')) {
                const hoverValue = parseInt(this.getAttribute('for').replace('star', ''));
                labels.forEach((l, i) => {
                    const labelValue = parseInt(l.getAttribute('for').replace('star', ''));
                    if (labelValue <= hoverValue) {
                        l.style.transform = 'scale(1.1)';
                    } else {
                        l.style.transform = 'scale(1)';
                    }
                });
            }
        });

        label.addEventListener('mouseleave', function() {
            if (!ratingContainer.classList.contains('has-selection')) {
                labels.forEach(l => l.style.transform = 'scale(1)');
            }
        });
    });
});
</script>
